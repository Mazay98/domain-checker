// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package storage is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "gitlab.lucky-team.pro/luckyads/go.domain-checker/internal/entities"
)

// MockCommon is a mock of Common interface.
type MockCommon struct {
	ctrl     *gomock.Controller
	recorder *MockCommonMockRecorder
}

// MockCommonMockRecorder is the mock recorder for MockCommon.
type MockCommonMockRecorder struct {
	mock *MockCommon
}

// NewMockCommon creates a new mock instance.
func NewMockCommon(ctrl *gomock.Controller) *MockCommon {
	mock := &MockCommon{ctrl: ctrl}
	mock.recorder = &MockCommonMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommon) EXPECT() *MockCommonMockRecorder {
	return m.recorder
}

// GetDomains mocks base method.
func (m *MockCommon) GetDomains(ctx context.Context) (entities.Domains, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomains", ctx)
	ret0, _ := ret[0].(entities.Domains)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDomains indicates an expected call of GetDomains.
func (mr *MockCommonMockRecorder) GetDomains(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomains", reflect.TypeOf((*MockCommon)(nil).GetDomains), ctx)
}

// UpdateDomainSSL mocks base method.
func (m *MockCommon) UpdateDomainSSL(ctx context.Context, id uint64, certs map[string]entities.CertInfo, region string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDomainSSL", ctx, id, certs, region)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDomainSSL indicates an expected call of UpdateDomainSSL.
func (mr *MockCommonMockRecorder) UpdateDomainSSL(ctx, id, certs, region interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDomainSSL", reflect.TypeOf((*MockCommon)(nil).UpdateDomainSSL), ctx, id, certs, region)
}
